#!/usr/bin/python
'''
Created on 2016. 10. 13.

@author: "comfact"
'''

import os
import sys
import shutil
import argparse

FORCE_COUNT = 3

def install(args):
    for path in sys.path:
        if 'site-packages' in path: python_library = path; break
        elif 'dist-packages' in path: python_library = path; break
    else:
        print 'search python library failed'
        exit(1)
    
    #===========================================================================
    # Install Acidipy
    #===========================================================================
    acidipy_library = python_library + '/acidipy'
    print 'Library Destination :', acidipy_library
    if os.path.exists(acidipy_library) and args.force:
        try: shutil.rmtree(acidipy_library)
        except: 'Prepare Directory Failed'; exit(1)
    
    print 'Install Acidipy',
    try: shutil.copytree('./acidipy', acidipy_library)
    except: print 'Failed'
    else: print 'OK'
    
    #===========================================================================
    # Install /bin/acibuilder
    #===========================================================================
    print 'Install Acidipy Binary Utils'
    if os.path.exists('/usr/bin'):
        if os.path.exists('/usr/bin/acibuilder') and args.force:
            os.system('rm -rf /usr/bin/acibuilder')
        try: shutil.copy('./bintool/acibuilder', '/usr/bin/acibuilder')
        except: pass
    
    #===========================================================================
    # Install Ansible Module
    #===========================================================================
    print 'Install Ansible Module'
    ansible_library = python_library + '/ansible/modules/extras/network'
    ansible_acibuilder = ansible_library + '/acibuilder.py'
    if os.path.exists(ansible_library):
        if os.path.exists(ansible_acibuilder) and args.force:
            os.system('rm -rf ' + ansible_acibuilder)
        try: shutil.copy('./ansible/acibuilder.py', ansible_acibuilder)
        except: pass

def uninstall(args):
    for path in sys.path:
        if 'site-packages' in path: python_library = path; break
        elif 'dist-packages' in path: python_library = path; break
    else:
        print 'search python library failed'
        exit(1)
    
    #===========================================================================
    # Remove Acidipy
    #===========================================================================
    acidipy_library = python_library + '/acidipy'
    print 'Library Destination :', acidipy_library
    try: shutil.rmtree(acidipy_library)
    except: print 'Remove Acidipy Failed'
    else: print 'Remove Acidipy OK'
    
    #===========================================================================
    # Remove /bin/acibuilder
    #===========================================================================
    if os.path.exists('/usr/bin/acibuilder'):
        if os.system('rm -rf /usr/bin/acibuilder') != 0: print 'Remove "acibuilder" Failed'
        else: print 'Remove "/usr/bin/acibuilder" OK'
    
    #===========================================================================
    # Remove Ansible Module
    #===========================================================================
    ansible_acibuilder = python_library + '/ansible/modules/extras/network/acibuilder.py'
    if os.path.exists(ansible_acibuilder):
        if os.system('rm -rf ' + ansible_acibuilder) != 0: print 'Remove Ansible Module Failed'
        else: print 'Remove Ansible Module OK'

if __name__ == '__main__':
    
    parser = argparse.ArgumentParser(description='"acidipy" installing tool')
    parser.add_argument('-f', '--force', action='store_true', help='force action')
    parser.add_argument('-r', '--remove', action='store_true', help='remove acidipy packages')
    args = parser.parse_args()
    
    if args.remove: uninstall(args)
    else: install(args)
        